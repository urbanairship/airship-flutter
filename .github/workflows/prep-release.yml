name: Prepare Release

on:
  workflow_dispatch:
    inputs:
      flutter_version:
        description: 'Airship Flutter Version (x.y.z)'
        required: true
        pattern: '^\d+\.\d+\.\d+$'
      proxy_version:
        description: 'Airship Framework Proxy Version (x.y.z)'
        required: true
        pattern: '^\d+\.\d+\.\d+$'
      ios_version:
        description: 'iOS SDK Version (x.y.z)'
        required: false
        pattern: '^\d+\.\d+\.\d+$'
      android_version:
        description: 'Android SDK Version (x.y.z)'
        required: false
        pattern: '^\d+\.\d+\.\d+$'
      draft:
        description: 'Create as draft PR'
        type: boolean
        default: false

permissions:
  contents: write
  pull-requests: write

jobs:
  prepare-release:
    runs-on: macos-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Branch
        run: |
          BRANCH="release/flutter-${{ github.event.inputs.flutter_version }}"
          git checkout -b $BRANCH

      - name: Run Updates
        run: |
          ./scripts/update_version.sh "${{ github.event.inputs.flutter_version }}" || exit 1
          ./scripts/update_proxy_version.sh "${{ github.event.inputs.proxy_version }}" || exit 1
          if [ -n "${{ github.event.inputs.ios_version }}" ] && [ -n "${{ github.event.inputs.android_version }}" ]; then
            ./scripts/update_changelog.sh "${{ github.event.inputs.flutter_version }}" "${{ github.event.inputs.proxy_version }}" "${{ github.event.inputs.ios_version }}" "${{ github.event.inputs.android_version }}" || exit 1
          fi

      - name: Verify Changes
        id: verify
        run: |
          CHANGED_FILES=$(git diff --name-only)
          if [ -z "$CHANGED_FILES" ]; then
            echo "No files were changed!"
            exit 1
          fi
          echo "Changed files:"
          echo "$CHANGED_FILES"
          echo "changed_files<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGED_FILES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        id: create-pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            Release ${{ github.event.inputs.flutter_version }}

            - Updates version to ${{ github.event.inputs.flutter_version }}
            - Updates Framework Proxy to ${{ github.event.inputs.proxy_version }}
            - Updates iOS SDK to ${{ github.event.inputs.ios_version }}
            - Updates Android SDK to ${{ github.event.inputs.android_version }}
          title: "Release ${{ github.event.inputs.flutter_version }}"
          body: |
            Release preparation for ${{ github.event.inputs.flutter_version }}

            Updates:
            - Version: ${{ github.event.inputs.flutter_version }}
            - Framework Proxy: ${{ github.event.inputs.proxy_version }}
            - iOS SDK: ${{ github.event.inputs.ios_version }}
            - Android SDK: ${{ github.event.inputs.android_version }}

            ## Changed Files
            ```
            ${{ steps.verify.outputs.changed_files }}
            ```

            Please verify the changes carefully before merging.
          branch: release/flutter-${{ github.event.inputs.flutter_version }}
          base: main
          labels: |
            release
            automated pr
          draft: ${{ github.event.inputs.draft }}
          delete-branch: true

      - name: Handle Success
        if: success() && steps.create-pr.outputs.pull-request-number
        run: |
          echo "Pull request created successfully"
          echo "PR Number: ${{ steps.create-pr.outputs.pull-request-number }}"
          echo "PR URL: ${{ steps.create-pr.outputs.pull-request-url }}"

      - name: Handle Failure
        if: failure()
        run: |
          echo "::error::Release preparation failed. Please check the logs above for details."
          exit 1
