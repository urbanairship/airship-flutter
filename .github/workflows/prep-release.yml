name: Prepare Release

on:
  workflow_dispatch:
    inputs:
      flutter_version:
        description: 'Airship Flutter Version (x.y.z)'
        required: true
        pattern: '^\d+\.\d+\.\d+$'
      proxy_version:
        description: 'Airship Framework Proxy Version (x.y.z)'
        required: true
        pattern: '^\d+\.\d+\.\d+$'
      ios_version:
        description: 'iOS SDK Version (x.y.z)'
        required: false
        pattern: '^\d+\.\d+\.\d+$'
      android_version:
        description: 'Android SDK Version (x.y.z)'
        required: false
        pattern: '^\d+\.\d+\.\d+$'
      draft:
        description: 'Create as draft PR'
        type: boolean
        default: false

permissions:
  contents: write
  pull-requests: write

jobs:
  prepare-release:
    runs-on: macos-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # Or temurin, etc.
          java-version: '17'  # Choose appropriate Java version

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Run Version Updates
        run: |
          ./scripts/update_version.sh "${{ github.event.inputs.flutter_version }}" || exit 1
          if [ -n "${{ github.event.inputs.proxy_version }}" ]; then
            # Ensure xcodebuild is removed from this script (See Step 1 above)
            ./scripts/update_proxy_version.sh "${{ github.event.inputs.proxy_version }}" || exit 1
          fi
          ./scripts/update_changelog.sh "${{ github.event.inputs.flutter_version }}" \
            $([ -n "${{ github.event.inputs.ios_version }}" ] && echo "--ios ${{ github.event.inputs.ios_version }}") \
            $([ -n "${{ github.event.inputs.android_version }}" ] && echo "--android ${{ github.event.inputs.android_version }}") || exit 1

      - name: Get Example Flutter dependencies
        # Run flutter pub get inside the example directory
        run: flutter pub get
        working-directory: ./example

      - name: Resolve iOS Package Dependencies
        # Run xcodebuild inside the example/ios directory
        run: xcodebuild -resolvePackageDependencies
        working-directory: ./example/ios
      # -------------------------------------

      - name: Verify Changes
        id: verify
        run: |
          CHANGED_FILES=$(git diff --name-only)
          if [ -z "$CHANGED_FILES" ]; then
            echo "No files were changed!"
            exit 1
          fi
          echo "Changed files:"
          echo "$CHANGED_FILES"
          echo "changed_files<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGED_FILES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        id: create-pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            Release ${{ github.event.inputs.flutter_version }}
          title: "Release ${{ github.event.inputs.flutter_version }}"
          body: |
            - Framework Proxy: ${{ github.event.inputs.proxy_version }}
            - iOS SDK: ${{ github.event.inputs.ios_version }}
            - Android SDK: ${{ github.event.inputs.android_version }}

            ## Changed Files:
            ```
            ${{ steps.verify.outputs.changed_files }}
            ```
          branch: release-${{ github.event.inputs.flutter_version }}
          base: main
          labels: |
            release
            automated pr
          draft: ${{ github.event.inputs.draft }}
          delete-branch: true

      - name: Handle Success
        if: success() && steps.create-pr.outputs.pull-request-number
        run: |
          echo "Pull request created successfully"
          echo "PR Number: ${{ steps.create-pr.outputs.pull-request-number }}"
          echo "PR URL: ${{ steps.create-pr.outputs.pull-request-url }}"

      - name: Slack Notification (Success)
        if: success() && steps.create-pr.outputs.pull-request-number
        uses: homoluctus/slatify@master
        with:
          type: success
          job_name: ":tada: Airship Flutter plugin release pull request generated :tada:"
          message: "@mobile-team A new Airship Flutter plugin release pull request for (v${{ github.event.inputs.flutter_version }}) is ready! :rocket:"
          url: ${{ secrets.MOBILE_SLACK_WEBHOOK }}

      - name: Handle Failure
        if: failure()
        run: |
          echo "::error::Release preparation failed. Please check the logs above for details."
          exit 1

      - name: Slack Notification (Failure)
        if: failure()
        uses: homoluctus/slatify@master
        with:
          type: failure
          job_name: ":disappointed: Airship Flutter Plugin Release Failed :disappointed:"
          message: "@crow The release preparation failed. Please check the workflow logs. :sob:"
          url: ${{ secrets.MOBILE_SLACK_WEBHOOK }}
